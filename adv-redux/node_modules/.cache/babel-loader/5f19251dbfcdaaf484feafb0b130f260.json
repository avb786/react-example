{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem && existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        if (existingItem) existingItem.quantity--; // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartSliceActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/adv-redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartSliceActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACD,KAJG;;AAKNQ,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA7C,CAArB;AACAR,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAG,CAACS,YAAJ,EAAkB;AACdL,QAAAA,KAAK,CAACL,KAAN,CAAYc,IAAZ,CAAiB;AAACD,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EAAb;AAAiBE,UAAAA,KAAK,EAAEN,OAAO,CAACM,KAAhC;AAAuCC,UAAAA,QAAQ,EAAE,CAAjD;AAAoDC,UAAAA,UAAU,EAAER,OAAO,CAACM,KAAxE;AAA+EjB,UAAAA,IAAI,EAAEW,OAAO,CAACS;AAA7F,SAAjB;AACH,OAFD,MAEM;AACFR,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BR,OAAO,CAACM,KAA5D;AACH;AAEJ,KAhBK;;AAiBNI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC9B,YAAMO,EAAE,GAAGP,MAAM,CAACC,OAAlB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAR,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAGS,YAAY,IAAIA,YAAY,CAACM,QAAb,KAA0B,CAA7C,EAAgD;AAC5CX,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAEO;AACH,YAAGH,YAAH,EACAA,YAAY,CAACM,QAAb,GAFG,CAGH;AACH;AACJ;;AA5BK;AAPgB,CAAD,CAA7B;AAwCA,OAAO,MAAMK,gBAAgB,GAAGxB,SAAS,CAACyB,OAAnC;AAEP,eAAezB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n        totalAmount: 0\n    },\n    reducers: {\n        replaceCart(state, action) {\n            state.totalQuantity = action.payload.totalQuantity;\n            state.items = action.payload.items;\n          },\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity++;\n            if(!existingItem) {\n                state.items.push({id: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title})\n            }else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }\n\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            state.totalQuantity--;\n            if(existingItem && existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== id);\n            } else {\n                if(existingItem)\n                existingItem.quantity--;\n                // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n\n});\n\nexport const cartSliceActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}