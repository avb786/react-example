{"ast":null,"code":"var _jsxFileName = \"/home/aayushbhankale/Learning Modules/React/adv-redux/src/components/Shop/ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { cartSliceActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n\n    const existingItem = updatedItems.find(item => item.id === id);\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem\n      }; // new object + copy existing properties to avoid state mutation\n\n      updatedItem.quantity++;\n      updatedItem.totalPrice = updatedItem.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(item => item.id === id);\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartSliceActions.replaceCart(newCart)); // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n    // dispatch(\n    //   cartActions.addItemToCart({\n    //     id,\n    //     title,\n    //     price,\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", true, function () {\n  return [useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/adv-redux/src/components/Shop/ProductItem.js"],"names":["useDispatch","cartSliceActions","Card","classes","ProductItem","props","title","price","description","id","cart","useSelector","state","dispatch","addToCartHandler","newTotalQuantity","totalQuantity","updatedItems","items","slice","existingItem","find","item","updatedItem","quantity","totalPrice","existingItemIndex","findIndex","push","name","newCart","replaceCart","toFixed","actions"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAoCJ,KAA1C;AACA,QAAMK,IAAI,GAAGC,WAAW,CAAEC,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAxB;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,gBAAgB,GAAGL,IAAI,CAACM,aAAL,GAAqB,CAA9C;AAEA,UAAMC,YAAY,GAAGP,IAAI,CAACQ,KAAL,CAAWC,KAAX,EAArB,CAH6B,CAGY;;AACzC,UAAMC,YAAY,GAAGH,YAAY,CAACI,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYA,EAAxC,CAArB;;AACA,QAAIW,YAAJ,EAAkB;AAChB,YAAMG,WAAW,GAAG,EAAE,GAAGH;AAAL,OAApB,CADgB,CACyB;;AACzCG,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACE,UAAZ,GAAyBlB,KAAlD;AACA,YAAMmB,iBAAiB,GAAGT,YAAY,CAACU,SAAb,CACvBL,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYA,EADE,CAA1B;AAGAQ,MAAAA,YAAY,CAACS,iBAAD,CAAZ,GAAkCH,WAAlC;AACD,KARD,MAQO;AACLN,MAAAA,YAAY,CAACW,IAAb,CAAkB;AAChBnB,QAAAA,EAAE,EAAEA,EADY;AAEhBF,QAAAA,KAAK,EAAEA,KAFS;AAGhBiB,QAAAA,QAAQ,EAAE,CAHM;AAIhBC,QAAAA,UAAU,EAAElB,KAJI;AAKhBsB,QAAAA,IAAI,EAAEvB;AALU,OAAlB;AAOD;;AAED,UAAMwB,OAAO,GAAG;AACdd,MAAAA,aAAa,EAAED,gBADD;AAEdG,MAAAA,KAAK,EAAED;AAFO,KAAhB;AAKAJ,IAAAA,QAAQ,CAACZ,gBAAgB,CAAC8B,WAAjB,CAA6BD,OAA7B,CAAD,CAAR,CA5B6B,CA8B7B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAxCD;;AA0CA,sBACE;AAAI,IAAA,SAAS,EAAE3B,OAAO,CAACmB,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACI,KAAxB;AAAA,0BAAiCA,KAAK,CAACyB,OAAN,CAAc,CAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIxB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAEL,OAAO,CAAC8B,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEnB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7DD;;GAAMV,W;UAGaJ,W;;;KAHbI,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { cartSliceActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch()\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n\n    const updatedItems = cart.items.slice(); // create copy via slice to avoid mutating original state\n    const existingItem = updatedItems.find((item) => item.id === id);\n    if (existingItem) {\n      const updatedItem = { ...existingItem }; // new object + copy existing properties to avoid state mutation\n      updatedItem.quantity++;\n      updatedItem.totalPrice = updatedItem.totalPrice + price;\n      const existingItemIndex = updatedItems.findIndex(\n        (item) => item.id === id\n      );\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id: id,\n        price: price,\n        quantity: 1,\n        totalPrice: price,\n        name: title,\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems,\n    };\n\n    dispatch(cartSliceActions.replaceCart(newCart));\n\n    // and then send Http request\n    // fetch('firebase-url', { method: 'POST', body: JSON.stringify(newCart) })\n\n    // dispatch(\n    //   cartActions.addItemToCart({\n    //     id,\n    //     title,\n    //     price,\n    //   })\n    // );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}