{"ast":null,"code":"var _jsxFileName = \"/home/aayushbhankale/Learning Modules/React/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../context/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  const ctx = useContext(AuthContext); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false); //Reducers\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    const instanser = setTimeout(() => {\n      console.log('Start Timer');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      console.log('Close Timer');\n      clearTimeout(instanser);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setEnteredPassword(event.target.value);\n\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      ctx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"email\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"password\",\n        type: \"password\",\n        isValid: passwordState,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"b+f1mz2uMjpxUIyFyz2Ts5q94DQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","ctx","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","emailInputRef","passwordInputRef","instanser","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focus","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../context/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes('@') }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') }\n  }\n  return { value: '', isValid: false }\n}\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 }\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 }\n  }\n}\n\nconst Login = (props) => {\n  const ctx = useContext(AuthContext)\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //Reducers\n  const [emailState, dispatchEmail] = useReducer(emailReducer, { value: '', isValid: null })\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, { value: '', isValid: null })\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    const instanser = setTimeout(() => {\n      console.log('Start Timer');\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('Close Timer');\n      clearTimeout(instanser)\n    }\n\n  }, [emailIsValid, passwordIsValid])\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n\n    // setEnteredPassword(event.target.value);\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: 'INPUT_BLUR', })\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: 'INPUT_BLUR' })\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid) {\n      ctx.onLogin(emailState.value, passwordState.value);\n    } else if(!emailIsValid) {\n      emailInputRef.current.focus()\n    } else {\n      passwordInputRef.current.focus()\n\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input ref={emailInputRef} id=\"email\" label=\"email\" type=\"email\" isValid={emailIsValid} value={emailState.value} onChange={emailChangeHandler} onBlur={validateEmailHandler} />\n        <Input ref={passwordInputRef} id=\"password\" label=\"password\" type=\"password\" isValid={passwordState} value={passwordState.value} onChange={passwordChangeHandler} onBlur={validatePasswordHandler} />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} >\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}