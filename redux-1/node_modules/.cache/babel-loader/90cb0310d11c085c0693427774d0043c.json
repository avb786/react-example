{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { createStore, combineReducers } from \"redux\";\nconst intialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: intialCounterState,\n  reducers: {\n    increment(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst intialAuthState = {\n  isAuth: false\n};\nconst AuthSlice = createSlice({\n  name: 'Auth',\n  initialState: intialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuth = true;\n    },\n\n    logout() {\n      state.isAuth = false;\n    }\n\n  }\n}); // const counterReducer = (state = intialState , action) => {\n//     if (action.type === \"INCREMENT\") {\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount,\n//         }\n//     }\n//     if (action.type === \"DECREMENT\") {\n//         return {\n//             ...state,\n//             counter: state.counter - 1\n//         }\n//     } \n//     if(action.type === \"TOGGLE\") {\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state\n// }\n// const store = createStore(counterSlice.reducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/redux-1/src/store/index.js"],"names":["createSlice","configureStore","createStore","combineReducers","intialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","action","payload","decrement","toggleCounter","intialAuthState","isAuth","AuthSlice","login","logout","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,MAAMC,kBAAkB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA3B;AAEA,MAAMC,YAAY,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,kBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvC;AACH,KAHK;;AAINC,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONW,IAAAA,aAAa,CAACJ,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AATK;AAHmB,CAAD,CAAhC;AAgBA,MAAMW,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE;AADY,CAAxB;AAGA,MAAMC,SAAS,GAAGnB,WAAW,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAEQ,eAFY;AAG1BP,EAAAA,QAAQ,EAAE;AACNU,IAAAA,KAAK,CAACR,KAAD,EAAQ;AACTA,MAAAA,KAAK,CAACM,MAAN,GAAe,IAAf;AACH,KAHK;;AAING,IAAAA,MAAM,GAAG;AACLT,MAAAA,KAAK,CAACM,MAAN,GAAe,KAAf;AAEH;;AAPK;AAHgB,CAAD,CAA7B,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AACA,MAAMI,KAAK,GAAGrB,cAAc,CAAC;AAAEsB,EAAAA,OAAO,EAAE;AAAClB,IAAAA,OAAO,EAAEE,YAAY,CAACgB;AAAvB;AAAX,CAAD,CAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AAEP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { createStore, combineReducers } from \"redux\";\n\nconst intialCounterState = { counter: 0, showCounter: true, };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: intialCounterState,\n    reducers: {\n        increment(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter\n        }\n    }\n})\n\nconst intialAuthState = {\n    isAuth: false\n}\nconst AuthSlice = createSlice({\n    name: 'Auth',\n    initialState: intialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuth = true;\n        },\n        logout() {\n            state.isAuth = false;\n\n        }\n    }\n})\n\n// const counterReducer = (state = intialState , action) => {\n//     if (action.type === \"INCREMENT\") {\n//         return {\n//             ...state,\n//             counter: state.counter + action.amount,\n//         }\n//     }\n\n//     if (action.type === \"DECREMENT\") {\n//         return {\n//             ...state,\n//             counter: state.counter - 1\n//         }\n//     } \n\n//     if(action.type === \"TOGGLE\") {\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n\n// const store = createStore(counterSlice.reducer);\nconst store = configureStore({ reducer: {counter: counterSlice.reducer}});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}