{"ast":null,"code":"var _jsxFileName = \"/home/aayushbhankale/Learning Modules/React/food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_CART\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIndex = state.items.findIndex(item => item.id = action.item.id);\n    const existingCartItem = state.items[existingCartIndex];\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispacthCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addCartTHandler = item => {\n    dispacthCartState({\n      type: \"ADD_CART\",\n      item: item\n    });\n  };\n\n  const removeCartHadler = id => {};\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartTHandler,\n    removeItem: removeCartHadler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"SNw/AWn6bAvxDvAbl0JOW+NmgUY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/food-order/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartIndex","findIndex","id","existingCartItem","updatedItems","concat","CartProvider","props","cartState","dispacthCartState","addCartTHandler","removeCartHadler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA+B;AAC3B,UAAMC,iBAAiB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA9E;AACA,UAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,GAAUR,MAAM,CAACG,IAAP,CAAYK,EAApD,CAA1B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,iBAAZ,CAAzB;AACA,UAAMI,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEc,YADJ;AAEHb,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD;AACH,CAZD;;AAcA,MAAMU,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCtB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAjD;;AAEC,QAAMqB,eAAe,GAAIb,IAAD,IAAU;AAC9BY,IAAAA,iBAAiB,CAAC;AAACd,MAAAA,IAAI,EAAE,UAAP;AAAmBE,MAAAA,IAAI,EAAEA;AAAzB,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMc,gBAAgB,GAAIT,EAAD,IAAQ,CAEhC,CAFD;;AAIA,QAAMU,WAAW,GAAG;AAChBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADD;AAEhBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFP;AAGhBsB,IAAAA,OAAO,EAACH,eAHQ;AAIhBI,IAAAA,UAAU,EAACH;AAJK,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAtBD;;GAAMT,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD_CART\") {\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartIndex = state.items.findIndex(item => item.id = action.item.id);\n        const existingCartItem = state.items[existingCartIndex];\n        const updatedItems = state.items.concat(action.item);\n        return {\n            items: updatedItems,\n            totalAmount: updateTotalAmount\n        }\n    }\n    return \n}\n\nconst CartProvider = props => {\n\n   const [cartState, dispacthCartState] = useReducer(cartReducer, defaultCartState)\n\n    const addCartTHandler = (item) => {\n        dispacthCartState({type: \"ADD_CART\", item: item})\n    }\n\n    const removeCartHadler = (id) => {\n\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem:addCartTHandler,\n        removeItem:removeCartHadler\n    }\n\n    return <CartContext.Provider value={cartContext} >\n        {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}