{"ast":null,"code":"var _jsxFileName = \"/home/aayushbhankale/Learning Modules/React/food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_CART\") {\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartIndex = state.items.findIndex(item => item.id = action.item.id);\n    const existingCartItem = state.items[existingCartIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartIndex = state.items.findIndex(item => item.id = action.id);\n    const existingItem = state.items[existingCartIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n    }\n  }\n\n  return;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispacthCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addCartTHandler = item => {\n    dispacthCartState({\n      type: \"ADD_CART\",\n      item: item\n    });\n  };\n\n  const removeCartHadler = id => {\n    dispacthCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addCartTHandler,\n    removeItem: removeCartHadler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"SNw/AWn6bAvxDvAbl0JOW+NmgUY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/aayushbhankale/Learning Modules/React/food-order/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateTotalAmount","item","price","amount","existingCartIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","updatedTotalAmount","filter","CartProvider","props","cartState","dispacthCartState","addCartTHandler","removeCartHadler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cartContext\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === \"ADD_CART\") {\n        const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartIndex = state.items.findIndex(item => item.id = action.item.id);\n        const existingCartItem = state.items[existingCartIndex];\n        let updatedItems;\n        if(existingCartItem) {\n\n            const updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount\n            }\n            updatedItems = [...state.items]\n            updatedItems[existingCartIndex] = updatedItem\n        } else {\n             updatedItems = state.items.concat(action.item);\n\n        }\n        return {\n            items: updatedItems,\n            totalAmount: updateTotalAmount\n        }\n    }\n\n    if(action.type === \"REMOVE\") {\n        const existingCartIndex = state.items.findIndex(item => item.id = action.id);\n        const existingItem = state.items[existingCartIndex];\n        const updatedTotalAmount = state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount === 1) {\n            updatedItems = state.items.filter(item => item.id !== action.id )\n        } else {\n            const updatedItem = {...existingItem, amount: existingItem.amount - 1}\n        }\n    }\n    return \n}\n\nconst CartProvider = props => {\n\n   const [cartState, dispacthCartState] = useReducer(cartReducer, defaultCartState)\n\n    const addCartTHandler = (item) => {\n        dispacthCartState({type: \"ADD_CART\", item: item})\n    }\n\n    const removeCartHadler = (id) => {\n        dispacthCartState({type: \"REMOVE\", id: id})\n\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem:addCartTHandler,\n        removeItem:removeCartHadler\n    }\n\n    return <CartContext.Provider value={cartContext} >\n        {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}